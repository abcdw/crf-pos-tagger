* Introduction
The goal of the project is to implement part-of-speech([[https://en.wikipedia.org/wiki/Part-of-speech_tagging][pos)]] tagger using
[[https://pystruct.github.io/intro.html][structured learning]].

This project uses [[http://blog.echen.me/2012/01/03/introduction-to-conditional-random-fields/][Conditional Random Fields]] modeling method
and [[https://media.readthedocs.org/pdf/sklearn-crfsuite/latest/sklearn-crfsuite.pdf][sklearn-crfsuite]] implementation of this method.

Source code of the project can be found on [[https://github.com/abcdw/crf-pos-tagger][github]].

* Baseline
Basic implementation of the tagger is similar to sklearn-crfsuite [[http://sklearn-crfsuite.readthedocs.io/en/latest/tutorial.html][tutorial]], but
uses different data sets, feature sets and labels.

** Datasets
~crf-pos-tagger~ uses ~pos_train.conll~ dataset for training model and
~pos_test.conll~ for evaluating results.

Datasets contains twitter messages, which contains pairs (pos tag, token) and
separated by empty line. Token is a word, mention, url, hashtag, number,
punctuation mark, special symbol and so on. Twits are not very good in terms of
right spelling(ppl, u, ill, etc) and absolutely afwul in terms of cases(i LOVE U
sO MuCH). Also, it is pretty hard to separate sentences, it may finishes with
period of may not. That is why ~crf-pos-tagger~ uses twits instead of sentences.

** Parser
For such dataset and with assumption about ~twit ~== sentence~ it is pretty easy
to write parser, which generates list of lists of pairs.

#+BEGIN_SRC python
def parse_file(filename):
    f = open(filename, 'r')
    raw = f.readlines()
    sentences = []
    s = []
    for line in raw:
        if line.strip():
            tag, token = line.strip().split('\t')
            s.append((token, tag))
        else:
            sentences.append(s)
            s = []
    return sentences
#+END_SRC

** Features and evaluation
~crf-pos-tagger~ compare tags generated by model and tags written in ~pos_test.conll~

|----------+--------|
| features | result |
|----------+--------|
|          |        |

* Improvements
